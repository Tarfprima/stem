# asyncio - –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ Python –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
import asyncio
import os
# aiogram.Dispatcher - –¥–∏—Å–ø–µ—Ç—á–µ—Ä —Å–æ–±—ã—Ç–∏–π –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ aiogram –¥–ª—è Telegram –±–æ—Ç–æ–≤
from aiogram import Dispatcher
# aiogram.filters - –º–æ–¥—É–ª—å —Ñ–∏–ª—å—Ç—Ä–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π
# Command - —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥ —Ç–∏–ø–∞ /start, /login
# –ë–µ–∑ —ç—Ç–æ–≥–æ: –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
from aiogram.filters import Command, CommandObject
# asgiref.sync.sync_to_async - –∞–¥–∞–ø—Ç–µ—Ä –¥–ª—è –≤—ã–∑–æ–≤–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ –∏–∑ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ
# –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Django ORM (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π) –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö –±–æ—Ç–∞
# –ë–µ–∑ —ç—Ç–æ–≥–æ: –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö Django –∏–∑ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞
from asgiref.sync import sync_to_async
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Django –¥–ª—è –∑–∞–ø—É—Å–∫–∞ ORM –≤–Ω–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ste.settings')
import django  # –û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å Django —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞
django.setup()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Django –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# TelegramProfile - –º–æ–¥–µ–ª—å —Å–≤—è–∑–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å Telegram
from stem.models import Task, TelegramProfile
# django.contrib.auth.models.User - –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Django
from django.contrib.auth.models import User
from ste.settings import BOT
# django.utils.timezone - –º–æ–¥—É–ª—å —Ä–∞–±–æ—Ç—ã —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∑–æ–Ω–∞–º–∏ Django
from django.utils import timezone

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ chat_id
@sync_to_async  # –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä - –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é
def get_user_by_chat_id(chat_id):
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Django –ø–æ Telegram chat_id"""
    try:
        return TelegramProfile.objects.get(telegram_chat_id=chat_id).user  # objects.get() - –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –∏–∑ –ë–î
    except TelegramProfile.DoesNotExist:  # DoesNotExist - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –æ–±—ä–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î
        return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É 10-–∑–Ω–∞—á–Ω–æ–º—É ID
@sync_to_async
def authorize_user(unique_id, chat_id):  # unique_id - –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å 10-–∑–Ω–∞—á–Ω—ã–º ID –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    """–°–≤—è–∑—ã–≤–∞–µ—Ç Telegram chat_id —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ unique_id"""
    try:
        profile = TelegramProfile.objects.get(unique_id=unique_id)  # –ø–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É ID
        profile.telegram_chat_id = chat_id  # chat_id - –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å ID —á–∞—Ç–∞ –≤ Telegram
        profile.save()  # save() - –º–µ—Ç–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î
        return profile.user
    except TelegramProfile.DoesNotExist:  # –∏—Å–∫–ª—é—á–µ–Ω–∏–µ - –ø—Ä–æ—Ñ–∏–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω
        return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–≤—è–∑–∫–∏ Telegram –±–æ—Ç–∞ –æ—Ç –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@sync_to_async
def disconnect_user(chat_id):
    """–û—Ç–≤—è–∑—ã–≤–∞–µ—Ç Telegram chat_id –æ—Ç –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç None)"""
    try:
        profile = TelegramProfile.objects.get(telegram_chat_id=chat_id)
        user = profile.user
        profile.telegram_chat_id = None  # –û—Ç–≤—è–∑—ã–≤–∞–µ–º chat_id
        profile.save()
        return user
    except TelegramProfile.DoesNotExist:
        return None

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞—á —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
@sync_to_async
def get_user_tasks_filtered(user, task_type="all"):  # task_type="all" - –ø–∞—Ä–∞–º–µ—Ç—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —Ç–∏–ø–∞ –∑–∞–¥–∞—á
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞—á —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ —Ç–∏–ø—É"""
    if not user:
        return "‚ùå –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π `/login –í–ê–®_ID`"
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
    filters = {'user': user, 'completed': False}  # filters - —Å–ª–æ–≤–∞—Ä—å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    
    if task_type == "notes":  # task_type - –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∞—è —Ç–∏–ø –∑–∞–¥–∞—á
        filters['reminder_time__isnull'] = True  # reminder_time__isnull - —Ñ–∏–ª—å—Ç—Ä Django –¥–ª—è NULL –∑–Ω–∞—á–µ–Ω–∏–π
        title = "üìù *–í–∞—à–∏ –∑–∞–º–µ—Ç–∫–∏:*"
        empty_msg = "üìù *–ó–∞–º–µ—Ç–∫–∏:*\n\n–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–º–µ—Ç–æ–∫."
    elif task_type == "reminders":
        filters['reminder_time__isnull'] = False  # False - –∑–∞–¥–∞—á–∏ —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
        title = "‚è∞ *–í–∞—à–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:*"
        empty_msg = "‚è∞ *–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:*\n\n–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π."
    
    tasks = Task.objects.filter(**filters)  # Task.objects.filter(**filters) - –º–µ—Ç–æ–¥ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–¥–∞—á –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
    if not tasks:
        return empty_msg
    
    result = f"{title}\n\n"
    for task in tasks:
        if task_type == "notes":
            result += f"üìù *{task.title}*\n"
            if task.description:  # description - –ø–æ–ª–µ –º–æ–¥–µ–ª–∏ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∑–∞–¥–∞—á–∏
                result += f"_{task.description}_\n"
            result += f"üìÖ –°–æ–∑–¥–∞–Ω–æ: {task.created_at.strftime('%d.%m.%Y %H:%M')}\n\n"
        elif task_type == "reminders":
            icon = "‚ùóÔ∏è" if task.overdue else "‚è∞"  # overdue - boolean –ø–æ–ª–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ—Å—Ä–æ—á–∫–∏
            status = "–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ" if task.overdue else "–ê–∫—Ç–∏–≤–Ω–æ"  # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            result += f"{icon} *{task.title}*\n"
            if task.description:  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
                result += f"_{task.description}_\n"
            result += f"üìÖ –°–æ–∑–¥–∞–Ω–æ: {task.created_at.strftime('%d.%m.%Y %H:%M')}\n"
            result += f"‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {task.reminder_time.strftime('%d.%m.%Y %H:%M')}\n"
            result += f"–°—Ç–∞—Ç—É—Å: {status}\n\n"
    
    return result

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
@sync_to_async
def get_all_tasks(user):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ –∑–∞–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –Ω–∞ –∞–∫—Ç–∏–≤–Ω—ã–µ, –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ"""
    if not user:
        return "‚ùå –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π `/login –í–ê–®_ID`"
    
    all_tasks = Task.objects.filter(user=user)
    if not all_tasks:
        return "üìã *–í—Å–µ –∑–∞–¥–∞—á–∏:*\n\n–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–¥–∞—á."
    
    # –†–∞–∑–¥–µ–ª—è–µ–º –∑–∞–¥–∞—á–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    active = all_tasks.filter(completed=False, overdue=False)
    overdue = all_tasks.filter(overdue=True, completed=False)
    completed = all_tasks.filter(completed=True)
    
    result = "üìã *–í—Å–µ –≤–∞—à–∏ –∑–∞–¥–∞—á–∏:*\n\n"
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏
    if active:
        result += "üü¢ *–ê–ö–¢–ò–í–ù–´–ï:*\n"
        result += "\n".join(f"{'‚è∞' if t.reminder_time else 'üìù'} {t.title}" for t in active) + "\n\n"
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
    if overdue:
        result += "üî¥ *–ü–†–û–°–†–û–ß–ï–ù–ù–´–ï:*\n"
        result += "\n".join(f"‚ùóÔ∏è {t.title}" for t in overdue) + "\n\n"
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
    if completed:
        result += "‚úÖ *–ó–ê–í–ï–†–®–ï–ù–ù–´–ï:*\n"
        result += "\n".join(f"‚úÖ {t.title}" for t in completed) + "\n\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    result += f"üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:* –í—Å–µ–≥–æ: {all_tasks.count()} | –ê–∫—Ç–∏–≤–Ω—ã—Ö: {active.count()} | –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö: {overdue.count()} | –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö: {completed.count()}"
    return result

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
@sync_to_async
def get_pending_notifications():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å"""
    # Django —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è –≤ settings.py
    now = timezone.now()
    
    # –ò—â–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è, –≤—Ä–µ–º—è –∫–æ—Ç–æ—Ä—ã—Ö —É–∂–µ –Ω–∞—Å—Ç—É–ø–∏–ª–æ
    pending_tasks = Task.objects.filter(
        reminder_time__lte=now,  # –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è <= —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        reminder_time__isnull=False,   # –£ –∑–∞–¥–∞—á–∏ –µ—Å—Ç—å –≤—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
        notification_sent=False,       # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –µ—â–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
        completed=False                # –ó–∞–¥–∞—á–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
    ).select_related('user__telegramprofile')  # –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
    
    return list(pending_tasks)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ
@sync_to_async
def mark_notification_sent(task_id):
    """–ü–æ–º–µ—á–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ"""
    try:
        task = Task.objects.get(id=task_id)
        task.notification_sent = True
        task.save()
        return True
    except Task.DoesNotExist:
        return False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
async def send_notification(task):  # async —Ñ—É–Ω–∫—Ü–∏—è - –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ Telegram"""
    try:  # try –±–ª–æ–∫ - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Telegram
        if not (hasattr(task.user, 'telegramprofile') and task.user.telegramprofile.telegram_chat_id):  # hasattr() - —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –∞—Ç—Ä–∏–±—É—Ç–∞ —É –æ–±—ä–µ–∫—Ç–∞
            return False
        
        chat_id = task.user.telegramprofile.telegram_chat_id  # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–ø–∞–∫—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º
        desc_text = f"\nüìù _{task.description}_\n" if task.description else ""  # —É—Å–ª–æ–≤–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è
        message = (  # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å —Ç–µ–∫—Å—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            f"‚è∞ *–ù–ê–ü–û–ú–ò–ù–ê–ù–ò–ï!*\n\nüîî *{task.title}*\n{desc_text}"
            f"\nüìÖ –°–æ–∑–¥–∞–Ω–æ: {timezone.localtime(task.created_at).strftime('%d.%m.%Y %H:%M')}\n"  # localtime() - —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
            f"‚è∞ –í—Ä–µ–º—è: {timezone.localtime(task.reminder_time).strftime('%d.%m.%Y %H:%M')}\n\n"
            f"üí° –ö–æ–º–∞–Ω–¥–∞ `/tasksTime` –ø–æ–∫–∞–∂–µ—Ç –≤—Å–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ
        await BOT.send_message(chat_id=chat_id, text=message, parse_mode='Markdown')  # BOT.send_message() - –º–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram; parse_mode='Markdown' - –ø–∞—Ä–∞–º–µ—Ç—Ä —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
        await mark_notification_sent(task.id)  # mark_notification_sent() - —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–º–µ—Ç–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ
        return True
        
    except Exception as e:  # Exception - –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –≤—Å–µ—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π Python
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∑–∞–¥–∞—á–∏ {task.id}: {e}")  # –≤—ã–≤–æ–¥ –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
        return False

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
async def check_and_send_notifications():  # —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ pending —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    try:
        pending_tasks = await get_pending_notifications()  # –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        if not pending_tasks:
            return
        
        print(f"üì§ –ù–∞–π–¥–µ–Ω–æ {len(pending_tasks)} –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –ø–∞—É–∑–æ–π –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏
        for task in pending_tasks:  # —Ü–∏–∫–ª –ø–æ –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–µ
            status = "‚úÖ" if await send_notification(task) else "‚ùå"  # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
            print(f"{status} {task.title} -> {task.user.username}")
            await asyncio.sleep(0.5)  # sleep() - —Ñ—É–Ω–∫—Ü–∏—è –ø–∞—É–∑—ã –Ω–∞ 0.5 —Å–µ–∫—É–Ω–¥—ã
            
    except Exception as e:  # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö –æ—à–∏–±–æ–∫ –≤ —Ñ—É–Ω–∫—Ü–∏–∏
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ check_and_send_notifications: {e}")

# –§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
async def notification_worker():  # —Ñ–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
    """–§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥"""
    print("üîî –ó–∞–ø—É—â–µ–Ω —Å–µ—Ä–≤–∏—Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥)")
    while True:  # –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç—ã
        try:
            await check_and_send_notifications()
        except Exception as e:  # –ø–µ—Ä–µ—Ö–≤–∞—Ç –ª—é–±—ã—Ö –æ—à–∏–±–æ–∫ –≤ —Ü–∏–∫–ª–µ
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ notification_worker: {e}")
        finally:  # finally –±–ª–æ–∫ - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
            await asyncio.sleep(60)  # –ø–∞—É–∑–∞ 60 —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏

# –°–æ–∑–¥–∞—ë–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
dp = Dispatcher() 

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start - –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message(Command("start"))  # @dp.message() - –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π; Command("start") - —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
async def command_start_handler(message):  # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã - async —Ñ—É–Ω–∫—Ü–∏—è
    """–ì–ª–∞–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ - –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"""
    user = await get_user_by_chat_id(message.chat.id)  # message.chat.id - –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    if not user:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
        await message.answer(  # answer() - –º–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            "ü§ñ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ STEM Bot!*\n\n"
            "‚ùå *–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ*\n\n"
            "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–∞—à–∏–º –∑–∞–º–µ—Ç–∫–∞–º –∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è.\n\n"
            "üìã *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:*\n"
            "1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ\n"
            "2. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å\n"  
            "3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–∞—à 10-–∑–Ω–∞—á–Ω—ã–π ID\n"
            "4. –í–≤–µ–¥–∏—Ç–µ: `/login –í–ê–®_ID`\n\n"
            "–ü—Ä–∏–º–µ—Ä: `/login 1234567890`",
            parse_mode='Markdown'  # –ø–∞—Ä–∞–º–µ—Ç—Ä —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
        )
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫–æ–º–∞–Ω–¥—ã
        await message.answer(
            f"ü§ñ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.username}!*\n\n"
            f"‚úÖ *–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ*\n\n"
            f"üìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
            f"/tasks - –∑–∞–º–µ—Ç–∫–∏ (–±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏)\n"
            f"/tasksTime - –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è (—Å –≤—Ä–µ–º–µ–Ω–µ–º)\n"
            f"/taskAll - –≤—Å–µ –∑–∞–¥–∞—á–∏\n" 
            f"/logout - –æ—Ç–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞\n"
            f"/help - –ø–æ–º–æ—â—å",
            parse_mode='Markdown'
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /login - –∞–≤—Ç–æ—Ä–∏–∑—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É ID
@dp.message(Command("login"))  # –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã /login
async def command_login_handler(message, command: CommandObject):  # CommandObject - –∫–ª–∞—Å—Å –æ–±—ä–µ–∫—Ç–∞ –∫–æ–º–∞–Ω–¥—ã —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è Telegram –∞–∫–∫–∞—É–Ω—Ç–∞ —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –Ω–∞ —Å–∞–π—Ç–µ —á–µ—Ä–µ–∑ 10-–∑–Ω–∞—á–Ω—ã–π ID"""
    if not command.args:  # args - –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ –∫–æ–º–∞–Ω–¥—ã
        await message.answer(  # –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            "‚ùå *–û—à–∏–±–∫–∞!* –£–∫–∞–∂–∏—Ç–µ –≤–∞—à 10-–∑–Ω–∞—á–Ω—ã–π ID.\n\n"
            "–ü—Ä–∏–º–µ—Ä: `/login 1234567890`\n\n"
            "ID –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ –Ω–∞ —Å–∞–π—Ç–µ.",
            parse_mode='Markdown'
        )
        return
    
    try:
        unique_id = int(command.args.strip())
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ ID —Å–æ—Å—Ç–æ–∏—Ç –∏–º–µ–Ω–Ω–æ –∏–∑ 10 —Ü–∏—Ñ—Ä
        if len(str(unique_id)) != 10:
            await message.answer(
                "‚ùå *–û—à–∏–±–∫–∞!* ID –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 10 —Ü–∏—Ñ—Ä.\n\n"
                "–ü—Ä–∏–º–µ—Ä: `/login 1234567890`",
                parse_mode='Markdown'
            )
            return
            
        # –ü—ã—Ç–∞–µ–º—Å—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await authorize_user(unique_id, message.chat.id)
        
        if user:
            # –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
            await message.answer(
                f"‚úÖ *–£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è!*\n\n"
                f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.username}!\n"
                f"–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ Telegram –±–æ—Ç—É.\n\n"
                f"üìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
                f"/start - –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞\n"
                f"/tasks - –∑–∞–º–µ—Ç–∫–∏ (–±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏)\n"
                f"/tasksTime - –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è (—Å –≤—Ä–µ–º–µ–Ω–µ–º)\n"
                f"/taskAll - –≤—Å–µ –∑–∞–¥–∞—á–∏\n"
                f"/logout - –æ—Ç–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞\n"
                f"/help - –ø–æ–º–æ—â—å",
                parse_mode='Markdown'
            )
        else:
            # –ù–µ–≤–µ—Ä–Ω—ã–π ID
            await message.answer(
                "‚ùå *–ù–µ–≤–µ—Ä–Ω—ã–π ID!*\n\n"
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å 10-–∑–Ω–∞—á–Ω–æ–≥–æ ID –≤ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ –Ω–∞ —Å–∞–π—Ç–µ.",
                parse_mode='Markdown'
            )
    except ValueError:
        # ID —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
        await message.answer(
            "‚ùå *–û—à–∏–±–∫–∞!* ID –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã.\n\n"
            "–ü—Ä–∏–º–µ—Ä: `/login 1234567890`",
            parse_mode='Markdown'
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /tasks - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞–º–µ—Ç–∫–∏ (–±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏)
@dp.message(Command("tasks"))
async def command_tasks_handler(message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–º–µ—Ç–æ–∫ (–∑–∞–¥–∞—á–∏ –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è)"""
    user = await get_user_by_chat_id(message.chat.id)
    notes = await get_user_tasks_filtered(user, "notes")
    await message.answer(notes, parse_mode='Markdown')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /tasksTime - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è (—Å –≤—Ä–µ–º–µ–Ω–µ–º)
@dp.message(Command("tasksTime"))
async def command_tasks_time_handler(message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π (–∑–∞–¥–∞—á–∏ —Å –≤—Ä–µ–º–µ–Ω–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è)"""
    user = await get_user_by_chat_id(message.chat.id)
    reminders = await get_user_tasks_filtered(user, "reminders")
    await message.answer(reminders, parse_mode='Markdown')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /taskAll - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –∑–∞–¥–∞—á–∏ —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
@dp.message(Command("taskAll"))
async def command_task_all_handler(message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø–æ —Å—Ç–∞—Ç—É—Å—É"""
    user = await get_user_by_chat_id(message.chat.id)
    tasks = await get_all_tasks(user)
    await message.answer(tasks, parse_mode='Markdown')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
@dp.message(Command("help"))
async def command_help_handler(message):
    """–ö–æ–º–∞–Ω–¥–∞ —Å–ø—Ä–∞–≤–∫–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"""
    await message.answer(
        "ü§ñ *STEM Bot - –ü–æ–º–æ—â—å*\n\n"
        "üìã *–ö–æ–º–∞–Ω–¥—ã:*\n"
        "/start - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è\n"
        "/login ID - –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (10 —Ü–∏—Ñ—Ä)\n"
        "/tasks - –∑–∞–º–µ—Ç–∫–∏ (–±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏)\n"
        "/tasksTime - –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è (—Å –≤—Ä–µ–º–µ–Ω–µ–º)\n"
        "/taskAll - –≤—Å–µ –∑–∞–¥–∞—á–∏ (—Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º)\n"
        "/logout - –æ—Ç–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞\n"
        "/help - —ç—Ç–∞ –ø–æ–º–æ—â—å\n\n"
        "üìù *–¢–∏–ø—ã –∑–∞–¥–∞—á:*\n"
        "‚Ä¢ *–ó–∞–º–µ—Ç–∫–∏* - –æ–±—ã—á–Ω—ã–µ –∑–∞–¥–∞—á–∏ –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏\n"
        "‚Ä¢ *–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è* - –∑–∞–¥–∞—á–∏ —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º\n\n"
        "üí° *–ö–∞–∫ –Ω–∞—á–∞—Ç—å:*\n"
        "1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ\n"
        "2. –í –ø—Ä–æ—Ñ–∏–ª–µ –Ω–∞–π–¥–∏—Ç–µ 10-–∑–Ω–∞—á–Ω—ã–π ID\n"
        "3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/login –í–ê–®_ID`\n"
        "4. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏!\n\n"
        "üîå *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º:*\n"
        "‚Ä¢ `/logout` - –æ—Ç–≤—è–∑–∞—Ç—å –±–æ—Ç–∞ –æ—Ç –ø—Ä–æ—Ñ–∏–ª—è\n"
        "‚Ä¢ –ü–æ—Å–ª–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –º–æ–∂–Ω–æ —Å–Ω–æ–≤–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ `/login`",
        parse_mode='Markdown'
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /logout - –æ—Ç–≤—è–∑—ã–≤–∞–µ—Ç –±–æ—Ç–∞ –æ—Ç –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message(Command("logout"))
async def command_logout_handler(message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–≤—è–∑–∫–∏ Telegram –±–æ—Ç–∞ –æ—Ç –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user = await get_user_by_chat_id(message.chat.id)
    
    if not user:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
        await message.answer(
            "‚ùå *–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã*\n\n"
            "–ë–æ—Ç —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω –æ—Ç –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è.\n"
            "–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/login –í–ê–®_ID`",
            parse_mode='Markdown'
        )
        return
    
    # –û—Ç–≤—è–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    disconnected_user = await disconnect_user(message.chat.id)
    
    if disconnected_user:
        # –£—Å–ø–µ—à–Ω–æ –æ—Ç–≤—è–∑–∞–Ω
        await message.answer(
            f"‚úÖ *–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω!*\n\n"
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {disconnected_user.username}, –≤–∞—à Telegram –±–æ—Ç –æ—Ç–≤—è–∑–∞–Ω –æ—Ç –ø—Ä–æ—Ñ–∏–ª—è –Ω–∞ —Å–∞–π—Ç–µ.\n\n"
            f"üîÑ *–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:*\n"
            f"1. –ù–∞–π–¥–∏—Ç–µ –≤–∞—à 10-–∑–Ω–∞—á–Ω—ã–π ID –≤ –ø—Ä–æ—Ñ–∏–ª–µ –Ω–∞ —Å–∞–π—Ç–µ\n"
            f"2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/login –í–ê–®_ID`\n\n"
            f"üí° –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∏ –∑–∞–¥–∞—á–∏ –æ—Å—Ç–∞–ª–∏—Å—å –Ω–∞ —Å–∞–π—Ç–µ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.",
            parse_mode='Markdown'
        )
    else:
        # –û—à–∏–±–∫–∞ –æ—Ç–≤—è–∑–∫–∏ (–Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å, –Ω–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
        await message.answer(
            "‚ùå *–û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è*\n\n"
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –±–æ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            parse_mode='Markdown'
        )

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ —Å —Å–µ—Ä–≤–∏—Å–æ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏ —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"""
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
    asyncio.create_task(notification_worker())
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π polling –±–æ—Ç–∞
    print("ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    await dp.start_polling(BOT)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ - —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
if __name__ == "__main__":  # —É—Å–ª–æ–≤–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏ –ø—Ä—è–º–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞
    try:
        asyncio.run(main())  # –∑–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    except KeyboardInterrupt:  # KeyboardInterrupt - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Ctrl+C
        print("\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:  # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")